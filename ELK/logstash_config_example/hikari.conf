input {
  file {
    mode => "read"
    exclude => "*.gz"
    file_completed_action => "delete"
    type => "prod"
    path => "/var/*paths*"
    start_position => beginning
    codec => multiline {
      pattern => "(?<timestamp>%{MONTHDAY}[/-]%{MONTH}[/-]%{YEAR} %{TIME})\]"
      negate => true
      what => "previous"
      max_lines => 30000
    }
  }

  file {
    mode => "read"
    exclude => "*.gz"
    file_completed_action => "delete"
    type => "do1-test"
    path => "/var/*paths*"
    start_position => beginning
    codec => multiline {
      pattern => "(?<timestamp>%{MONTHDAY}[/-]%{MONTH}[/-]%{YEAR} %{TIME})\]"
      negate => true
      what => "previous"
      max_lines => 30000
    }
  }
}


filter {

  if "Closing connection com.mysql.jdbc.JDBC4Connection" in [message] {
    drop {}
  }

  mutate {add_field => {"logpath" => "%{path}"}}

  if "hikari" in [path] {

    mutate {add_tag => [ "hikari" ]}

    grok {
      match => { "message" => "(?<timestamp>%{MONTHDAY}[/-]%{MONTH}[/-]%{YEAR} %{TIME})\] \[%{DATA:logger}\] \[%{LOGLEVEL:log_level}\]%{GREEDYDATA:body_msg}"}
      match => { "message" => "(?<timestamp>%{MONTHDAY}[/-]%{MONTH}[/-]%{YEAR} %{TIME})\] \[%{DATA:logger}\] \[%{LOGLEVEL:log_level}.*?\]%{GREEDYDATA:body_msg}"}
    }

    mutate {
     uppercase => [ "log_level" ]
    }
    
  } else { 
    mutate {
      add_field => {"conf_message" => "log not recognized, look file name in logpath"}
      add_tag => [ "_grokparsefailure" ]
    }
  }

  date {
    match => ["timestamp", "dd-MMM-yyyy HH:mm:ss.SSS"]
    target => "@timestamp"
  }

  if "_dateparsefailure" not in [tags] or "_grokparsefailure" not in [tags] or "_jsonparsefailure" not in [tags] {
    mutate {
      remove_field => [ "message" ]
      remove_field => "timestamp" 
    }
  }

}

output {
  if "_dateparsefailure" in [tags] or "_grokparsefailure" in [tags] or "_jsonparsefailure" in [tags] {
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "failure-%{+YYYY.MM.dd}"
      user => logstash_writer
      password => "${es_pwd}"
    }
  } else if [type] == "prod" {
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "prod-%{+YYYY.MM}"
      user => logstash_writer
      password => "${es_pwd}"
    }
  } else if [type] == "do1-test" {
      elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "do1-test-%{+YYYY.MM}"
      user => logstash_writer
      password => "${es_pwd}"
    }
  }
}